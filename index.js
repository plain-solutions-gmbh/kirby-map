(function(){"use strict";const T="";function f(n,e,t,a,s,r,c,p){var o=typeof n=="function"?n.options:n;e&&(o.render=e,o.staticRenderFns=t,o._compiled=!0),a&&(o.functional=!0),r&&(o._scopeId="data-v-"+r);var i;if(c?(i=function(l){l=l||this.$vnode&&this.$vnode.ssrContext||this.parent&&this.parent.$vnode&&this.parent.$vnode.ssrContext,!l&&typeof __VUE_SSR_CONTEXT__<"u"&&(l=__VUE_SSR_CONTEXT__),s&&s.call(this,l),l&&l._registeredComponents&&l._registeredComponents.add(c)},o._ssrRegister=i):s&&(i=p?function(){s.call(this,(o.functional?this.parent:this).$root.$options.shadowRoot)}:s),i)if(o.functional){o._injectStyles=i;var u=o.render;o.render=function(h,m){return i.call(m),u(h,m)}}else{var d=o.beforeCreate;o.beforeCreate=d?[].concat(d,i):[i]}return{exports:n,options:o}}const g={data(){return{map:null,attachedMarker:[],attachedPopup:[],options:null}},computed:{mapId(){return`map-${this._uid}`},center(){if(!this.content.center)return[0,20];const n=this.field("marker").fieldsets.marker.tabs.content.fields.coordinates,{name:e,lat:t,lng:a}=this.content.center;return n.defaultName=e,n.defaultLat=t,n.defaultLng=a,[a,t]},marker(){return this.content.marker.map(({content:n})=>{var t,a,s,r,c,p,o,i,u,d,l,h,m,_;const e=(r=(s=(a=(t=n.image)==null?void 0:t[0])==null?void 0:a.info)==null?void 0:s.split(" \xD7 "))!=null?r:[0,0];return{image:(p=(c=n.image)==null?void 0:c[0])==null?void 0:p.url,width:e[0]/100*n.size,height:e[1]/100*n.size,lat:(d=(u=(o=n.coordinates)==null?void 0:o.lat)!=null?u:(i=n.coors)==null?void 0:i.lat)!=null?d:0,lng:(_=(m=(l=n.coordinates)==null?void 0:l.lng)!=null?m:(h=n.coors)==null?void 0:h.lng)!=null?_:51,anchor:n.anchor,hasPopup:n.haspopup,popup:n.popup,popupOffset:n.popupoffset}})}},watch:{"content.style":function(n){this.map&&this.map.setStyle(`mapbox://styles/mapbox/${n}`)},"content.zoom":function(n){this.map&&this.map.setZoom(n)},center(n){this.map&&this.map.setCenter(n)},marker(n){this.attachedPopup.forEach(e=>e.remove()),this.attachedPopup=[],this.attachedMarker.forEach(e=>e.remove()),this.attachedMarker=[],this.setMarker(n)}},created(){const n="https://api.mapbox.com/mapbox-gl-js/v2.3.1";let e;const t="mapbox-gl.css";document.getElementById(t)||(e=document.createElement("link"),e.id=t,e.href=`${n}/${t}`,e.rel="stylesheet",document.head.appendChild(e));const a="mapbox-gl.js";document.getElementById(a)?this.initMap():(e=document.createElement("script"),e.id=a,e.addEventListener("load",this.initMap),e.src=`${n}/${a}`,document.body.appendChild(e))},methods:{async initMap(){var e,t;const n=await this.$api.get("map/options");this.options=n,mapboxgl.accessToken=this.options.token,this.map=new mapboxgl.Map({container:this.mapId,center:this.center,style:`mapbox://styles/mapbox/${(e=this.content.style)!=null?e:this.options.defaultStyle}`,zoom:(t=this.content.zoom)!=null?t:1}),this.map.scrollZoom.disable(),this.setMarker(this.marker)},async setMarker(n){var e;if(!!n)for(const t of n){let a=null;t.image&&(a=document.createElement("div"),a.className="marker",a.style.backgroundImage=`url(${t.image})`,a.style.width=`${t.width}px`,a.style.height=`${t.height}px`,a.style.backgroundSize="100%");const s=new mapboxgl.Marker({anchor:(e=t.anchor)!=null?e:null,element:a}).setLngLat([t.lng,t.lat]).addTo(this.map);if(this.attachedMarker.push(s),t.hasPopup){const r=new mapboxgl.Popup({offset:parseInt(t.popupOffset),focusAfterOpen:!1});r.setLngLat([t.lng,t.lat]),r.setHTML(t.popup).addTo(this.map),this.attachedPopup.push(r)}}}}};var k=function(){var e=this,t=e._self._c;return t("div",{staticClass:"embedded-maps"},[t("div",{staticClass:"embedded-map-item",attrs:{id:e.mapId},on:{update:e.update}})])},v=[],y=f(g,k,v,!1,null,null,null,null);const $=y.exports,N="",b={computed:{url(){var n,e,t;return(t=(e=(n=this.content.image)==null?void 0:n[0])==null?void 0:e.icon)==null?void 0:t.url},description(){var n,e,t;return(t=(n=this.content.coordinates)==null?void 0:n.name)!=null?t:(e=this.content.coors)==null?void 0:e.name},coordinates(){return this.content.coordinates?`${this.content.coordinates.lat},${this.content.coordinates.lng}`:this.content.coors?"(This marker was created with an older version. Please set the position from scratch.)":null}}};var w=function(){var e=this,t=e._self._c;return t("div",{staticClass:"marker-item",on:{click:e.open}},[e.url?t("div",{staticClass:"marker-item-image"},[t("img",{attrs:{src:e.url}})]):e._e(),t("div",{staticClass:"marker-item-description"},[t("p",[e._v(e._s(e.description||e.$t("empty")))]),t("p",[e._v(e._s(e.coordinates))])])])},x=[],C=f(b,w,x,!1,null,null,null,null);const M=C.exports,z="",L={props:{token:{type:String,required:!0},label:{type:String,required:!0},value:{type:Object,default(){return{name:void 0,lat:void 0,lng:void 0}}},required:Boolean,disabled:Boolean,default:{type:Object,default(){return{name:"",lat:0,lng:0}}}},data(){return{geoData:[],error:null}},computed:{mapId(){return`map-${this._uid}`},location(){var n,e,t,a,s,r,c,p,o,i,u,d;return{name:(a=(t=(n=this.value)==null?void 0:n.name)!=null?t:(e=this.default)==null?void 0:e.name)!=null?a:"",lat:(p=(c=(s=this.value)==null?void 0:s.lat)!=null?c:(r=this.default)==null?void 0:r.lat)!=null?p:0,lng:(d=(u=(o=this.value)==null?void 0:o.lng)!=null?u:(i=this.default)==null?void 0:i.lng)!=null?d:0}},dropdownOptions(){return this.geoData.map(({place_name:n,place_type:e,center:t})=>({name:n,type:e[0],lat:t[1],lng:t[0]}))}},methods:{async searchLocation(n){if(!n){this.$refs.dropdown.close();return}try{const t=await(await fetch(`https://api.mapbox.com/geocoding/v5/mapbox.places/${n}.json?types=address,country,postcode,place,locality&limit=5&access_token=${this.token}`)).json();if(this.error=null,t.features){const a=t.features.slice(0,6);a?(this.geoData=a,this.$refs.dropdown.open()):(this.error=this.$t("maps.field.L.error.empty"),this.$refs.dropdown.close())}else this.error=t.message,this.$refs.dropdown.close()}catch{this.$refs.dropdown.close()}},selectDropdown(n){delete n.type,this.$refs.dropdown.close(),this.$emit("input",n)},setValue(n,e){let t={name:e==="name"?n:this.location.name,lat:e==="lat"?n:this.location.lat,lng:e==="lng"?n:this.location.lng};if(this.$emit("input",t),this.required&&(!t.name||!t.lat||!t.lng)){this.error=this.$t("maps.field.geolocation.error");return}if(!t.name){this.error=this.$t("maps.field.geolocation.name.error");return}if(!t.lat||isNaN(t.lat)||Math.abs(t.lat)>90){this.error=this.$t("maps.field.geolocation.lat.error");return}if(!t.lng||isNaN(t.lng)||Math.abs(t.lng)>180){this.error=this.$t("maps.field.geolocation.lng.error");return}this.error=null}}};var O=function(){var e=this,t=e._self._c;return t("k-field",{staticClass:"k-geolocation-field",attrs:{label:e.label,required:e.required,disabled:e.disabled}},[t("k-text-field",{ref:"name",staticClass:"k-geolocation-search",attrs:{type:"text",theme:"field",value:e.search,icon:"search"},on:{input:e.searchLocation}}),t("k-dropdown",[t("k-dropdown-content",{ref:"dropdown"},e._l(e.dropdownOptions,function(a,s){return t("k-dropdown-item",{key:s,on:{click:function(r){return e.selectDropdown(a)}},nativeOn:{keydown:[function(r){return!r.type.indexOf("key")&&e._k(r.keyCode,"enter",13,r.key,"Enter")?null:(r.preventDefault(),e.selectDropdown(a))},function(r){return!r.type.indexOf("key")&&e._k(r.keyCode,"space",32,r.key,[" ","Spacebar"])?null:(r.preventDefault(),e.selectDropdown(a))}]}},[t("span",{domProps:{innerHTML:e._s(e.$t(`maps.field.geolocation.${a.type}`)+": "+a.name)}})])}),1)],1),t("k-input",{ref:"name",attrs:{type:"text",theme:"field",value:e.location.name,before:e.$t("maps.field.geolocation.name")},on:{input:function(a){return e.setValue(a,"name")}}}),t("k-input",{ref:"lat",attrs:{type:"text",theme:"field",value:e.location.lat,before:e.$t("maps.field.geolocation.lat")},on:{input:function(a){return e.setValue(a,"lat")}}}),t("k-input",{ref:"lng",attrs:{type:"text",theme:"field",value:e.location.lng,before:e.$t("maps.field.geolocation.lng")},on:{input:function(a){return e.setValue(a,"lng")}}}),e.error?t("k-box",{attrs:{text:e.error,theme:"negative"}}):e._e()],1)},E=[],P=f(L,O,E,!1,null,null,null,null);const S=P.exports;window.panel.plugin("microman/map",{blocks:{marker:M,maps:$},fields:{geolocation:S}})})();
